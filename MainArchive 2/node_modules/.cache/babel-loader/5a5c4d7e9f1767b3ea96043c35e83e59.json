{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/MainArchive 2/src/auth/resetPassword/ResetPassword.js\";\n// import { Box, TextField, Typography } from \"@material-ui/core\";\n// import React from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import { Form, Formik } from \"formik\";\n// import * as Yup from \"yup\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\n// const ResetPassword = () => {\n//   const classes = useStyles();\n//   return (\n//     <Box>\n//       <Box>\n//         <Box>\n//           <Typography variant=\"h2\">Reset your Password</Typography>\n//           <Typography variant=\"body2\">\n//             Enter Password and confirm password for set your new password\n//           </Typography>\n//           <Formik>\n\n//             <Form>\n//               <TextField>\n\n//               </TextField>\n//             </Form>\n//           </Formik>\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React, { useState } from \"react\";\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nconst ResetPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Validation schema for the new password and confirm password fields\n  const validationSchema = Yup.object().shape({\n    newPassword: Yup.string().required(\"New Password is required.\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, \"Please enter a valid password.\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required.\").oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Reset your Password\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Enter Password and confirm password to set your new password\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      // Handle form submission here\n      console.log(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, _ref => {\n    let {\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      values\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Enter new password\",\n      type: showPassword ? \"text\" : \"password\",\n      name: \"newPassword\",\n      value: values.newPassword,\n      error: Boolean(touched.newPassword && errors.newPassword),\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Confirm new password\",\n      type: showPassword ? \"text\" : \"password\",\n      name: \"confirmPassword\",\n      value: values.confirmPassword,\n      error: Boolean(touched.confirmPassword && errors.confirmPassword),\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setShowPassword(!showPassword),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, showPassword ? \"Hide Password\" : \"Show Password\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Reset Password\"));\n  }))));\n};\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","Box","TextField","Typography","Formik","Form","Yup","ResetPassword","showPassword","setShowPassword","validationSchema","object","shape","newPassword","string","required","matches","confirmPassword","oneOf","ref","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","initialValues","onSubmit","values","console","log","_ref","errors","touched","handleChange","handleBlur","fullWidth","placeholder","type","name","value","error","Boolean","onBlur","onChange","onClick"],"sources":["/Users/admin/Desktop/MainArchive 2/src/auth/resetPassword/ResetPassword.js"],"sourcesContent":["// import { Box, TextField, Typography } from \"@material-ui/core\";\n// import React from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import { Form, Formik } from \"formik\";\n// import * as Yup from \"yup\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\n// const ResetPassword = () => {\n//   const classes = useStyles();\n//   return (\n//     <Box>\n//       <Box>\n//         <Box>\n//           <Typography variant=\"h2\">Reset your Password</Typography>\n//           <Typography variant=\"body2\">\n//             Enter Password and confirm password for set your new password\n//           </Typography>\n//           <Formik>\n\n//             <Form>\n//               <TextField>\n\n//               </TextField>\n//             </Form>\n//           </Formik>\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default ResetPassword;\n\n\nimport React, { useState } from \"react\";\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst ResetPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Validation schema for the new password and confirm password fields\n  const validationSchema = Yup.object().shape({\n    newPassword: Yup.string()\n      .required(\"New Password is required.\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n        \"Please enter a valid password.\"\n      ),\n    confirmPassword: Yup.string()\n      .required(\"Confirm Password is required.\")\n      .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\"),\n  });\n\n  return (\n    <Box>\n      <Box>\n        <Box>\n          <Typography variant=\"h2\">Reset your Password</Typography>\n          <Typography variant=\"body2\">\n            Enter Password and confirm password to set your new password\n          </Typography>\n          <Formik\n            initialValues={{\n              newPassword: \"\",\n              confirmPassword: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              // Handle form submission here\n              console.log(values);\n            }}\n          >\n            {({ errors, touched, handleChange, handleBlur, values }) => (\n              <Form>\n                {/* Password field from Login component */}\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"Enter new password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"newPassword\"\n                  value={values.newPassword}\n                  error={Boolean(touched.newPassword && errors.newPassword)}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n\n                {/* Confirm Password field */}\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"Confirm new password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  value={values.confirmPassword}\n                  error={Boolean(\n                    touched.confirmPassword && errors.confirmPassword\n                  )}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n\n                {/* Toggle show/hide password */}\n                <button onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? \"Hide Password\" : \"Show Password\"}\n                </button>\n\n                {/* Submit button */}\n                <button type=\"submit\">Reset Password</button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}