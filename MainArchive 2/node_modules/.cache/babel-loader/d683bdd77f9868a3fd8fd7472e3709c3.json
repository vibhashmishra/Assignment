{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/MainArchive 2/src/auth/resetPassword/ResetPassword.js\";\n// import { Box, TextField, Typography } from \"@material-ui/core\";\n// import React from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import { Form, Formik } from \"formik\";\n// import * as Yup from \"yup\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\n// const ResetPassword = () => {\n//   const classes = useStyles();\n//   return (\n//     <Box>\n//       <Box>\n//         <Box>\n//           <Typography variant=\"h2\">Reset your Password</Typography>\n//           <Typography variant=\"body2\">\n//             Enter Password and confirm password for set your new password\n//           </Typography>\n//           <Formik>\n\n//             <Form>\n//               <TextField>\n\n//               </TextField>\n//             </Form>\n//           </Formik>\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React, { useState } from \"react\";\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-hot-toast\";\nimport { useHistory } from \"react-router-dom\";\nimport apiConfig from \"src/ApiConfig/apiConfig\";\nimport axios from \"axios\";\nconst ResetPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n  //   const token = window.localStorage.getItem(\"token\")\n  console.log(\"asdfg\", token);\n\n  // Validation schema for the new password and confirm password fields\n  const validationSchema = Yup.object().shape({\n    newPassword: Yup.string().required(\"New Password is required.\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, \"Please enter a valid password.\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required.\").oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n  });\n  const formInitialSchema = {\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const handleFormSubmit = async values => {\n    try {\n      console.log(values);\n      //   setIsLoading(true);\n      const res = await axios({\n        method: \"POST\",\n        url: apiConfig.resetPassword,\n        headers: {\n          token: token\n        },\n        data: {\n          password: values.newPassword,\n          confirmPassword: values.confirmPassword\n        }\n      });\n      if (res.data.responseCode === 200) {\n        toast.success(res.data.responseMessage);\n        history.push({\n          pathname: \"/LoginPage\"\n        });\n      }\n      if (res.data.responseCode === 404) {\n        toast.error(res.data.responseMessage);\n      }\n    } catch (err) {\n      var _err$responseCode, _err$responseCode$dat;\n      toast.error(err === null || err === void 0 ? void 0 : (_err$responseCode = err.responseCode) === null || _err$responseCode === void 0 ? void 0 : (_err$responseCode$dat = _err$responseCode.data) === null || _err$responseCode$dat === void 0 ? void 0 : _err$responseCode$dat.responseMessage);\n      console.error(err.res);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Reset your Password\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Enter Password and confirm password to set your new password\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => handleFormSubmit(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, _ref => {\n    let {\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      values\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Enter new password\",\n      type: showPassword ? \"text\" : \"password\",\n      name: \"newPassword\",\n      value: values.newPassword,\n      error: Boolean(touched.newPassword && errors.newPassword),\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Confirm new password\",\n      type: showPassword ? \"text\" : \"password\",\n      name: \"confirmPassword\",\n      value: values.confirmPassword,\n      error: Boolean(touched.confirmPassword && errors.confirmPassword),\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setShowPassword(!showPassword),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, showPassword ? \"Hide Password\" : \"Show Password\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Reset Password\"));\n  }))));\n};\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","Box","TextField","Typography","Formik","Form","Yup","toast","useHistory","apiConfig","axios","ResetPassword","showPassword","setShowPassword","history","console","log","token","validationSchema","object","shape","newPassword","string","required","matches","confirmPassword","oneOf","ref","formInitialSchema","password","handleFormSubmit","values","res","method","url","resetPassword","headers","data","responseCode","success","responseMessage","push","pathname","error","err","_err$responseCode","_err$responseCode$dat","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","initialValues","onSubmit","_ref","errors","touched","handleChange","handleBlur","fullWidth","placeholder","type","name","value","Boolean","onBlur","onChange","onClick"],"sources":["/Users/admin/Desktop/MainArchive 2/src/auth/resetPassword/ResetPassword.js"],"sourcesContent":["// import { Box, TextField, Typography } from \"@material-ui/core\";\n// import React from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import { Form, Formik } from \"formik\";\n// import * as Yup from \"yup\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\n// const ResetPassword = () => {\n//   const classes = useStyles();\n//   return (\n//     <Box>\n//       <Box>\n//         <Box>\n//           <Typography variant=\"h2\">Reset your Password</Typography>\n//           <Typography variant=\"body2\">\n//             Enter Password and confirm password for set your new password\n//           </Typography>\n//           <Formik>\n\n//             <Form>\n//               <TextField>\n\n//               </TextField>\n//             </Form>\n//           </Formik>\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default ResetPassword;\n\n\nimport React, { useState } from \"react\";\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-hot-toast\";\nimport { useHistory } from \"react-router-dom\";\nimport apiConfig from \"src/ApiConfig/apiConfig\";\nimport axios from \"axios\";\n\n\nconst ResetPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n//   const token = window.localStorage.getItem(\"token\")\n  console.log(\"asdfg\",token)\n\n  // Validation schema for the new password and confirm password fields\n  const validationSchema = Yup.object().shape({\n    newPassword: Yup.string()\n      .required(\"New Password is required.\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n        \"Please enter a valid password.\"\n      ),\n    confirmPassword: Yup.string()\n      .required(\"Confirm Password is required.\")\n      .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\"),\n  });\n\n  const formInitialSchema = { \n    password:\"\",\n    confirmPassword:\"\"     \n  };\n\n  const handleFormSubmit = async (values) => {\n    try {\n      console.log(values);\n    //   setIsLoading(true);\n      const res = await axios({\n        method: \"POST\",\n        url: apiConfig.resetPassword,\n        headers:{ \n            token:token,\n        },\n        data: {\n          password: values.newPassword,\n          confirmPassword:values.confirmPassword,\n        },\n      });\n\n      if (res.data.responseCode === 200) {\n        toast.success(res.data.responseMessage);\n\n        history.push({\n          pathname: \"/LoginPage\",\n          \n        });\n      }\n      if (res.data.responseCode === 404) {\n        toast.error(res.data.responseMessage);\n      }\n     \n    } catch (err) {\n      toast.error(err?.responseCode?.data?.responseMessage);\n      console.error(err.res);\n\n    }\n  };\n\n  return (\n    <Box>\n      <Box>\n        <Box>\n          <Typography variant=\"h2\">Reset your Password</Typography>\n          <Typography variant=\"body2\">\n            Enter Password and confirm password to set your new password\n          </Typography>\n          <Formik\n            initialValues={{\n              newPassword: \"\",\n              confirmPassword: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values)=>handleFormSubmit(values)}\n          >\n            {({ errors, touched, handleChange, handleBlur, values }) => (\n              <Form>\n                {/* Password field from Login component */}\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"Enter new password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"newPassword\"\n                  value={values.newPassword}\n                  error={Boolean(touched.newPassword && errors.newPassword)}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n\n                {/* Confirm Password field */}\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"Confirm new password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  value={values.confirmPassword}\n                  error={Boolean(\n                    touched.confirmPassword && errors.confirmPassword\n                  )}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n\n                {/* Toggle show/hide password */}\n                <button onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? \"Hide Password\" : \"Show Password\"}\n                </button>\n\n                {/* Submit button */}\n                <button type=\"submit\">Reset Password</button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}