{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/MainArchive 2/src/auth/resetPassword/ResetPassword.js\";\nimport React, { useState } from \"react\";\nimport { Box, Button, TextField, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-hot-toast\";\nimport { useHistory } from \"react-router-dom\";\nimport apiConfig from \"src/ApiConfig/apiConfig\";\nimport { makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  mainBox: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  resetBox: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\nconst ResetPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n  const token = window.localStorage.getItem(\"token\");\n  console.log(\"asdfg\", token);\n  const classes = useStyles();\n  const validationSchema = Yup.object().shape({\n    newPassword: Yup.string().required(\"New Password is required.\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, \"Please enter a valid password.\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required.\").oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n  });\n  const formInitialSchema = {\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const handleFormSubmit = async values => {\n    try {\n      console.log(values);\n      //   setIsLoading(true);\n      const res = await axios({\n        method: \"POST\",\n        url: apiConfig.resetPassword,\n        headers: {\n          token: token\n        },\n        data: {\n          password: values.newPassword,\n          confirmPassword: values.confirmPassword\n        }\n      });\n      if (res.data.responseCode === 200) {\n        toast.success(res.data.responseMessage);\n        history.push({\n          pathname: \"/LoginPage\"\n        });\n      }\n      if (res.data.responseCode === 404) {\n        toast.error(res.data.responseMessage);\n      }\n    } catch (err) {\n      var _err$responseCode, _err$responseCode$dat;\n      toast.error(err === null || err === void 0 ? void 0 : (_err$responseCode = err.responseCode) === null || _err$responseCode === void 0 ? void 0 : (_err$responseCode$dat = _err$responseCode.data) === null || _err$responseCode$dat === void 0 ? void 0 : _err$responseCode$dat.responseMessage);\n      console.error(err.res);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.mainBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.resetBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Reset your Password\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Enter Password and confirm password to set your new password\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => handleFormSubmit(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, _ref => {\n    let {\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      values\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      maxWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Enter new password\",\n      type: showPassword ? \"text\" : \"password\",\n      name: \"newPassword\",\n      value: values.newPassword,\n      error: Boolean(touched.newPassword && errors.newPassword),\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      maxWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Confirm new password\",\n      type: showPassword ? \"text\" : \"password\",\n      name: \"confirmPassword\",\n      value: values.confirmPassword,\n      error: Boolean(touched.confirmPassword && errors.confirmPassword),\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"error\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Reset Password\"));\n  }))));\n};\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Formik","Form","Yup","toast","useHistory","apiConfig","makeStyles","axios","useStyles","theme","mainBox","height","width","display","alignItems","justifyContent","resetBox","flexDirection","ResetPassword","showPassword","setShowPassword","history","token","window","localStorage","getItem","console","log","classes","validationSchema","object","shape","newPassword","string","required","matches","confirmPassword","oneOf","ref","formInitialSchema","password","handleFormSubmit","values","res","method","url","resetPassword","headers","data","responseCode","success","responseMessage","push","pathname","error","err","_err$responseCode","_err$responseCode$dat","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","initialValues","onSubmit","_ref","errors","touched","handleChange","handleBlur","maxWidth","placeholder","type","name","value","Boolean","onBlur","onChange","color"],"sources":["/Users/admin/Desktop/MainArchive 2/src/auth/resetPassword/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, TextField, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-hot-toast\";\nimport { useHistory } from \"react-router-dom\";\nimport apiConfig from \"src/ApiConfig/apiConfig\";\nimport { makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme)=>({\n    mainBox:{\n        height:\"100vh\",\n        width:\"100vw\",\n        display:\"flex\",\n        alignItems:\"center\",\n        justifyContent:\"center\",\n\n    },\n    resetBox:{\n        display:\"flex\",\n        flexDirection:\"column\"\n\n    }\n}))\n\n \n\nconst ResetPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n  const token = window.localStorage.getItem(\"token\");\n  console.log(\"asdfg\", token);\n  const classes = useStyles();\n\n  const validationSchema = Yup.object().shape({\n    newPassword: Yup.string()\n      .required(\"New Password is required.\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n        \"Please enter a valid password.\"\n      ),\n    confirmPassword: Yup.string()\n      .required(\"Confirm Password is required.\")\n      .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\"),\n  });\n\n  const formInitialSchema = {\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const handleFormSubmit = async (values) => {\n    try {\n      console.log(values);\n      //   setIsLoading(true);\n      const res = await axios({\n        method: \"POST\",\n        url: apiConfig.resetPassword,\n        headers: {\n          token: token,\n        },\n        data: {\n          password: values.newPassword,\n          confirmPassword: values.confirmPassword,\n        },\n      });\n\n      if (res.data.responseCode === 200) {\n        toast.success(res.data.responseMessage);\n\n        history.push({\n          pathname: \"/LoginPage\",\n        });\n      }\n      if (res.data.responseCode === 404) {\n        toast.error(res.data.responseMessage);\n      }\n    } catch (err) {\n      toast.error(err?.responseCode?.data?.responseMessage);\n      console.error(err.res);\n    }\n  };\n\n  return (\n    <Box className={classes.mainBox}>\n      <Box>\n        <Box className={classes.resetBox}>\n          <Typography variant=\"h2\">Reset your Password</Typography>\n          <Typography variant=\"body2\">\n            Enter Password and confirm password to set your new password\n          </Typography>\n          <Formik\n            initialValues={{\n              newPassword: \"\",\n              confirmPassword: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values) => handleFormSubmit(values)}\n          >\n            {({ errors, touched, handleChange, handleBlur, values }) => (\n              <Form>\n                <TextField\n                  maxWidth\n                  variant=\"outlined\"\n                  placeholder=\"Enter new password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"newPassword\"\n                  value={values.newPassword}\n                  error={Boolean(touched.newPassword && errors.newPassword)}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n\n                <TextField\n                  maxWidth\n                  variant=\"outlined\"\n                  placeholder=\"Confirm new password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  value={values.confirmPassword}\n                  error={Boolean(\n                    touched.confirmPassword && errors.confirmPassword\n                  )}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <Button variant=\"contained\" color=\"error\" type=\"submit\">\n                  Reset Password\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}