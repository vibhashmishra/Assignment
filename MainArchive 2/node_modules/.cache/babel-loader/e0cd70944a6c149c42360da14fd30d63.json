{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/MainArchive 2/src/views/pages/Home/MarketTrend.js\";\nimport React from \"react\";\nimport { Grid, Box, Container, Typography, makeStyles, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport MarketTrendCard from \"src/component/MarketTrendCard\";\nconst useStyles = makeStyles(() => ({\n  marketTrendBox: {\n    padding: \"100px 0px 50px\"\n  }\n}));\nexport default function MarketTrend() {\n  const classes = useStyles();\n  const marketData = [{\n    cryptoImg: \"/images/bitcoin.png\",\n    sName: \"BTC\",\n    fName: \"BITCOIN\",\n    upArrow: \"/images/upArrow.png\",\n    rateValue: \"$56,623.54\",\n    rate: \"+1.41%\",\n    ratePrice: \"priceColor\",\n    graph: \"/images/greenGraph.png\"\n  }, {\n    cryptoImg: \"/images/ethereum.png\",\n    sName: \"ETH\",\n    fName: \"ETHEREUM\",\n    upArrow: \"/images/upArrow.png\",\n    rateValue: \"$4,267.90\",\n    rate: \"+2.22%\",\n    ratePrice: \"priceColor\",\n    graph: \"/images/greenGraph.png\"\n  }, {\n    cryptoImg: \"/images/binance.png\",\n    sName: \"BNB\",\n    fName: \"BINANCE\",\n    upArrow: \"/images/downArrow.png\",\n    rateValue: \"$587.74\",\n    rate: \"-0.82%\",\n    ratePrice: \"priceRedColor\",\n    graph: \"/images/redGraph.png\",\n    key: \"red\"\n  }, {\n    cryptoImg: \"/images/usdt.png\",\n    sName: \"USDT\",\n    fName: \"TETHER\",\n    rateValue: \"$0.9998\",\n    rate: \"+0,03%\",\n    ratePrice: \"priceColor\",\n    graph: \"/images/blueGraph.png\",\n    upArrow: \"/images/upArrow.png\"\n  }];\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.marketTrendBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Market Trend\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, marketData && (marketData === null || marketData === void 0 ? void 0 : marketData.map((data, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MarketTrendCard, {\n      data: data,\n      i: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}","map":{"version":3,"names":["React","Grid","Box","Container","Typography","makeStyles","Button","Link","MarketTrendCard","useStyles","marketTrendBox","padding","MarketTrend","classes","marketData","cryptoImg","sName","fName","upArrow","rateValue","rate","ratePrice","graph","key","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","container","spacing","map","data","i","Fragment","item","xs","sm","md","lg"],"sources":["/Users/admin/Desktop/MainArchive 2/src/views/pages/Home/MarketTrend.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Box,\n  Container,\n  Typography,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\n\nimport { Link } from \"react-router-dom\";\nimport MarketTrendCard from \"src/component/MarketTrendCard\";\n\nconst useStyles = makeStyles(() => ({\n  marketTrendBox: {\n    padding: \"100px 0px 50px\",\n  },\n}));\n\nexport default function MarketTrend() {\n  const classes = useStyles();\n  const marketData = [\n    {\n      cryptoImg: \"/images/bitcoin.png\",\n      sName: \"BTC\",\n      fName: \"BITCOIN\",\n      upArrow: \"/images/upArrow.png\",\n      rateValue: \"$56,623.54\",\n      rate: \"+1.41%\",\n      ratePrice:\"priceColor\",\n      graph: \"/images/greenGraph.png\",\n      \n    },\n    {\n      cryptoImg: \"/images/ethereum.png\",\n      sName: \"ETH\",\n      fName: \"ETHEREUM\",\n      upArrow: \"/images/upArrow.png\",\n      rateValue: \"$4,267.90\",\n      rate: \"+2.22%\",\n      ratePrice:\"priceColor\",\n      graph: \"/images/greenGraph.png\",\n  \n    },\n    {\n      cryptoImg: \"/images/binance.png\",\n      sName: \"BNB\",\n      fName: \"BINANCE\",\n      upArrow: \"/images/downArrow.png\",\n      rateValue: \"$587.74\",\n      rate: \"-0.82%\",\n      ratePrice:\"priceRedColor\",\n      graph: \"/images/redGraph.png\",\n      key:\"red\"\n    },\n    {\n      cryptoImg: \"/images/usdt.png\",\n      sName: \"USDT\",\n      fName: \"TETHER\",\n      rateValue: \"$0.9998\",\n      rate: \"+0,03%\",\n      ratePrice:\"priceColor\",\n      graph: \"/images/blueGraph.png\",\n      upArrow: \"/images/upArrow.png\",\n      \n    },\n  ];\n  return (\n    <Box className={classes.marketTrendBox}>\n      <Container>\n        <Typography variant=\"h2\">Market Trend</Typography>\n        <Grid container spacing={3}>\n          {marketData &&\n            marketData?.map((data, i) => {\n              return (\n                <>\n                  <Grid item xs={12} sm={6} md={4} lg={3}>\n                    <MarketTrendCard data={data} i={i} />\n                  </Grid>\n                </>\n              );\n            })}\n         \n        </Grid>\n      </Container>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}